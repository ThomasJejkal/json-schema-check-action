{"version":3,"file":"main.js","sources":["../src/main.ts"],"sourcesContent":["import * as core from '@actions/core'\nimport { diffString } from 'json-diff'\nimport Ajv from 'ajv'\nimport * as fs from 'fs'\nimport * as github from '@actions/github'\nimport fetch from 'node-fetch'\n\nexport async function run(): Promise<void> {\n  try {\n    const schemaPath: string = core.getInput('schemaPath')\n    const validate: boolean = core.getBooleanInput('validate')\n    const diff: boolean = core.getBooleanInput('createDiff')\n    core.info(`Checking schema path: ${schemaPath}`)\n    core.info(`Performing validate: ${validate}`)\n    core.info(`Performing diff: ${diff}`)\n\n    const ajv = new Ajv()\n\n    let message: string =\n      '# JSON Schema Check Results\\n' +\n      '\\n' +\n      '### Validate JSON Schema\\n' +\n      '\\n'\n\n    core.info(`Reading schema file from ${schemaPath}`)\n    const data: string = fs.readFileSync(schemaPath, {\n      encoding: 'utf8',\n      flag: 'r'\n    })\n    core.info('Parsing schema.')\n    const schemaParsed = JSON.parse(data)\n\n    let validationErrors: boolean = true\n    let diffResult: string = ''\n\n    if (validate) {\n      core.info('Running schema validation.')\n      const succeed = ajv.validateSchema(schemaParsed, false)\n\n      if (succeed) {\n        core.info('Schema validation succeeded.')\n        message += ':white_check_mark: The schema is valid JSON.\\n'\n        validationErrors = false\n      } else {\n        core.error('Schema validation failed.')\n        message +=\n          ':x: Validation of the schema failed!\\n' +\n          '```json\\n' +\n          JSON.stringify(ajv.errors) +\n          '\\n```\\n'\n        message +=\n          '> [!TIP]\\n' +\n          '> To check and correct validation errors, you may use any online JSON schema validator, e.g., [jsonschemavalidator.net](https://www.jsonschemavalidator.net/).\\n\\n'\n      }\n    } else {\n      core.info('Skipping schema validation.')\n      message +=\n        ':grey_question: No information available as validation was not configured. \\n'\n      validationErrors = false\n    }\n\n    message += '\\n### Diff to Latest Release\\n\\n'\n    if (diff) {\n      core.info('Running diff to previous version.')\n      const previousData: string | undefined =\n        await obtainLastVersion(schemaPath)\n\n      if (previousData) {\n        const previousSchemaParsed = JSON.parse(previousData)\n        diffResult = diffString(previousSchemaParsed, schemaParsed, {\n          color: false\n        })\n\n        if (diffResult.length == 0) {\n          core.info('No difference found to previous version.')\n          message +=\n            '```diff\\nNo difference found to previous version.\\n```\\n\\n'\n        } else {\n          core.info(diffResult)\n\n          if (diffResult.length > 1000) {\n            core.warning(\n              'Difference is larger than 1000 characters. Diff formatting may be broken.'\n            )\n          }\n\n          message += '```diff\\n' + diffResult + '\\n```\\n\\n'\n          message +=\n            '> [!TIP]\\n' +\n            '> To check schema backwards compatibility, you may use any AI provider with a prompt like:\\n' +\n            '> \\n' +\n            '>   **Assuming I have two JSON schemas, both are different according to the following diff, are both schemas compatible?\\n' +\n            '>   <PASTE_DIFF_HERE>**\\n' +\n            '>\\n' +\n            '> If you like, you may add additional rendering instructions, e.g.:\\n' +\n            '>\\n' +\n            '> **Render the result as table showing the changed attributes, a columns to check backward compatibility, ' +\n            '> and a column to provide comments on why a certain property is not backwards compatible.**\\n'\n        }\n      } else {\n        message += '```diff\\nNo previous schema version found.\\n```\\n\\n'\n      }\n    } else {\n      core.info('Diff skipped.')\n      message +=\n        ':grey_question: No information available as diff creation was not configured. \\n'\n    }\n\n    core.info('Finalizing output message.')\n    message += '\\n### Next Steps\\n\\n'\n\n    if (validationErrors) {\n      message += '- [ ] Fix validation errors\\n'\n    } else {\n      message += '- [X] Fix validation errors\\n'\n    }\n\n    if (diff) {\n      message += '- [ ] Check backwards compatibility based on diff\\n'\n    } else {\n      message += '- [X] Check backwards compatibility based on diff\\n'\n    }\n    message += '- [ ] React with :thumbsup: to mark the PR as ready'\n    message += '\\n\\n'\n\n    core.info('Setting output message.')\n    core.setOutput('message', message)\n\n    core.info('Action succeeded.')\n    await core.summary.addRaw(message).write()\n  } catch (error) {\n    if (error instanceof Error) core.setFailed(error.message)\n    else core.setFailed('Failed with unknown error. ' + error)\n  }\n}\n\nasync function obtainLastVersion(\n  filename: string\n): Promise<string | undefined> {\n  try {\n    const token: string = core.getInput('github_token', { required: true })\n    const filePath: string = filename\n    const octokit = github.getOctokit(token)\n    const { owner, repo } = github.context.repo\n\n    core.info(`Obtaining tags for repo ${owner}/${repo}`)\n    // Step 1: Get the latest tag\n    const tagsResponse = await octokit.rest.repos.listTags({\n      owner,\n      repo,\n      per_page: 1\n    })\n\n    core.info(`Received ${tagsResponse.data.length} tags.`)\n    const latestTag = tagsResponse.data[0]?.name\n    if (!latestTag) {\n      core.warning(\n        'No tags found in the repository. Returning empty previous version.'\n      )\n      return undefined\n    }\n    core.info(`Latest tag: ${latestTag}`)\n\n    // Step 2: Construct URL to fetch the file from the tag\n    const fileUrl = `https://raw.githubusercontent.com/${owner}/${repo}/${latestTag}/${filePath}`\n    core.info(`Fetching previous version from: ${fileUrl}`)\n\n    const response = await fetch(fileUrl)\n\n    if (!response.ok) {\n      core.setFailed(`Failed to fetch previous version: ${response.statusText}`)\n      return undefined\n    }\n\n    return await response.text()\n  } catch (error) {\n    if (error instanceof Error) core.setFailed(error.message)\n    else core.setFailed('Failed with unknown error. ' + error)\n  }\n  return undefined\n}\n"],"names":[],"mappings":"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"}